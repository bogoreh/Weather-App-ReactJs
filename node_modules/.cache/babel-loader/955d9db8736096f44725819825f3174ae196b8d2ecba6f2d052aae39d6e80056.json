{"ast":null,"code":"var _jsxFileName = \"/home/abdibogoreh/Downloads/React-Weather-app-master/src/components/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DisplayWeather from \"./DisplayWeather\";\nimport \"./weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Weather() {\n  _s();\n  const [weather, setWeather] = useState([]);\n  const [form, setForm] = useState({\n    city: \"\",\n    country: \"\"\n  });\n  const APIKEY = \"eb3ea29cf1503d627150f027520faf96\";\n  async function weatherData(e) {\n    e.preventDefault();\n    if (form.city === \"\") {\n      alert(\"Add values\");\n    } else {\n      const data = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${form.city},${form.country}&APPID=${APIKEY}`).then(res => res.json()).then(data => data);\n      setWeather({\n        data: data\n      });\n    }\n  }\n  const handleChange = e => {\n    let name = e.target.name;\n    let value = e.target.value;\n    if (name === \"city\") {\n      setForm({\n        ...form,\n        city: value\n      });\n    }\n    if (name === \"country\") {\n      setForm({\n        ...form,\n        country: value\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"city\",\n        name: \"city\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0 \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Country\",\n        name: \"country\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"getweather\",\n        onClick: e => weatherData(e),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), weather.data !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DisplayWeather, {\n        data: weather.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"a7CWxBv8XTINrvZO3Mk90Ns9FHk=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","DisplayWeather","jsxDEV","_jsxDEV","Weather","_s","weather","setWeather","form","setForm","city","country","APIKEY","weatherData","e","preventDefault","alert","data","fetch","then","res","json","handleChange","name","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","undefined","_c","$RefreshReg$"],"sources":["/home/abdibogoreh/Downloads/React-Weather-app-master/src/components/Weather.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport DisplayWeather from \"./DisplayWeather\";\nimport \"./weather.css\";\n\nfunction Weather() {\n  const [weather, setWeather] = useState([]);\n  const [form, setForm] = useState({\n    city: \"\",\n    country: \"\",\n  });\n\n  const APIKEY = \"eb3ea29cf1503d627150f027520faf96\";\n  \n  async function weatherData(e) {\n    e.preventDefault();\n    if (form.city === \"\") {\n      alert(\"Add values\");\n    } else {\n      const data = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${form.city},${form.country}&APPID=${APIKEY}`\n      )\n        .then((res) => res.json())\n        .then((data) => data);\n\n      setWeather({ data: data });\n    }\n  }\n\n  const handleChange = (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    if (name === \"city\") {\n      setForm({ ...form, city: value });\n    }\n    if (name === \"country\") {\n      setForm({ ...form, country: value });\n    }\n  };\n  \n  return (\n    <div className=\"weather\">\n      <span className=\"title\">Weather App</span>\n      <br />\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"city\"\n          name=\"city\"\n          onChange={(e) => handleChange(e)}\n        />\n        &nbsp; &nbsp; &nbsp;&nbsp;\n        <input\n          type=\"text\"\n          placeholder=\"Country\"\n          name=\"country\"\n          onChange={(e) => handleChange(e)}\n        />\n        <button className=\"getweather\" onClick={(e) => weatherData(e)}>\n          Submit\n        </button>\n      </form>\n\n      {/* {console.log(weather)} */}\n      {weather.data !== undefined ? (\n        <div>\n          <DisplayWeather data={weather.data} />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Weather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}